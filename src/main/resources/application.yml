spring:
  application: { name: view }
  profiles:
    active: dev
  security:
    # OAuth2 인증을 위한 변수 설정 (PropZerties class에서 관리)
    oauth2:
      client:
        registration:
          payco:
            client-name: payco
            client-id: 3RDSu8vFgPGHMPosNIfuVN2
            client-secret: 6NB0t6Lw8Z0yaSHwYE_KtJZy
            redirect-uri: http://nuribooks.shop:3000/custom-login/oauth2/code/payco
            authorization-grant-type: authorization_code
            scope: name, email
          naver:
            client-name: naver
            client-id: d6YdnepPmQ4bke5_WW60
            client-secret: CoGRw7Oq3U
            redirect-uri: http://nuribooks.shop:3000/custom-login/oauth2/code/naver
            authorization-grant-type: authorization_code
            scope: name, email
        provider:
          payco:
            authorization-uri: https://id.payco.com/oauth2.0/authorize?userLocale=ko_KR&serviceProviderCode=FRIENDS
            token-uri: https://id.payco.com/oauth2.0/token
            user-info-uri: https://apis-payco.krp.toastoven.net/payco/friends/find_member_v2.json
          naver:
            authorization-uri: https://nid.naver.com/oauth2.0/authorize?
            token-uri: https://nid.naver.com/oauth2.0/token
            user-info-uri: https://openapi.naver.com/v1/nid/me
            user-name-attribute: response
thymeleaf:
  prefix: classpath:/templates/
  suffix: .html

server:
  port: 3000

error:
  message-key: errorMessage

success:
  message-key: successMessage

warning:
  message-key: warningMessage

info:
  message-key: infoMessage

header:
  refresh-key-name: Refresh
---
spring:
  config:
    activate:
      on-profile: dev

logging:
  level:
    root: debug